{
  "address": "0x3197920bfE4f670804bB42D09726685239dda0b5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf7a492e5bfd8a190430fee486fa0527dfb930c1cd088d5704272814312a4accf",
  "receipt": {
    "to": null,
    "from": "0x88fBD6Fe448f69d0Beb18a779566470B957D3045",
    "contractAddress": "0x3197920bfE4f670804bB42D09726685239dda0b5",
    "transactionIndex": 39,
    "gasUsed": "1045219",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x01203ab6bb96152b4aceb4d15458801b3d8e45906d34cd671bfeace3697059c0",
    "transactionHash": "0xf7a492e5bfd8a190430fee486fa0527dfb930c1cd088d5704272814312a4accf",
    "logs": [],
    "blockNumber": 8214387,
    "cumulativeGasUsed": "6650415",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "317b8c2c74054e7c4fe8629c594720bf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"alvinobabino\",\"details\":\"This implements price feeds as our library This contract follows solidity style guide\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feed as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds the contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Pragma\\npragma solidity ^0.8.0;\\n\\n// Imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// Error codes\\nerror FundMe__NotOwner(); // Custom error\\n\\n/**\\n * @title A contract for crowd funding\\n * @author alvinobabino\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our library\\n *\\n * This contract follows solidity style guide\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 1e18; // constant saves transaction gas\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"Sender is not owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner(); // throw error with revert\\n        }\\n        _; // _ used in modifier exclusively\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice This function funds the contract\\n     * @dev This implements price feed as our library\\n     */\\n    function fund() public payable {\\n        // Set minimum fund amount in USD\\n        // 1. How to send Eth to a contract?\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) > MINIMUM_USD,\\n            \\\"Didn't send enough\\\"\\n        ); // 1e18 = 1 * 10^18 -> wei\\n        // undo action before revert and send remaining gas back\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        // reset funders array\\n        s_funders = new address[](0);\\n\\n        // withdraw the funds\\n        // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call - recommended way to send eth\\n        (\\n            bool callSuccess, // bytes memory dataReturned\\n\\n        ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        // much cheaper to read from memory than storage\\n        address[] memory funders = s_funders;\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x64f55b84b2da193e432d13e15c8b2ed319968805a406013dd330dad003bc6446\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // ABI\\n        // Address 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // );\\n        (\\n            ,\\n            // uint80 roundId,\\n            int256 answer, // uint startedAt, // uint timestamp, // uint answeredInRound\\n            ,\\n            ,\\n\\n        ) = priceFeed.latestRoundData();\\n        return uint256(answer * 1e10); // typecasted to uint256\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x72b590f6a6e7d8997840022007150cf3e3f64248d912f5c01ffc53fda1654d57\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620013113803806200131183398181016040528101906200003791906200011f565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000151565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e782620000ba565b9050919050565b620000f981620000da565b81146200010557600080fd5b50565b6000815190506200011981620000ee565b92915050565b600060208284031215620001385762000137620000b5565b5b6000620001488482850162000108565b91505092915050565b60805160601c61118c620001856000396000818161033401528181610584015281816105d301526107ca015261118c6000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ac4565b6102e9565b6040516100cc9190610b0a565b60405180910390f35b6100dd610332565b005b3480156100eb57600080fd5b506100f4610573565b6040516101019190610b0a565b60405180910390f35b34801561011657600080fd5b5061011f610580565b60405161012c9190610b34565b60405180910390f35b34801561014157600080fd5b5061014a6105a8565b6040516101579190610bae565b60405180910390f35b6101686101b1565b005b6101726105d1565b005b34801561018057600080fd5b5061019b60048036038101906101969190610bf5565b610896565b6040516101a89190610b34565b60405180910390f35b6802b5e3af16b18800006101ee60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108de90919063ffffffff16565b1161022e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022590610c7f565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e09190610cce565b92505081905550565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610463576000600182815481106103dd576103dc610d24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045b90610d53565b9150506103ba565b50600067ffffffffffffffff81111561047f5761047e610d9c565b5b6040519080825280602002602001820160405280156104ad5781602001602082028036833780820191505090505b50600190805190602001906104c39291906109ba565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ea90610dfc565b60006040518083038185875af1925050503d8060008114610527576040519150601f19603f3d011682016040523d82523d6000602084013e61052c565b606091505b5050905080610570576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056790610e5d565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610656576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106da57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610690575b5050505050905060005b815181101561076557600082828151811061070257610701610d24565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075d90610d53565b9150506106e4565b50600067ffffffffffffffff81111561078157610780610d9c565b5b6040519080825280602002602001820160405280156107af5781602001602082028036833780820191505090505b50600190805190602001906107c59291906109ba565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080c90610dfc565b60006040518083038185875af1925050503d8060008114610849576040519150601f19603f3d011682016040523d82523d6000602084013e61084e565b606091505b5050905080610892576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088990610e5d565b60405180910390fd5b5050565b6000600182815481106108ac576108ab610d24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108ea8361091a565b90506000670de0b6b3a764000085836109039190610e7d565b61090d9190610f06565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096357600080fd5b505afa158015610977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099b9190610fc4565b5050509150506402540be400816109b2919061103f565b915050919050565b828054828255906000526020600020908101928215610a33579160200282015b82811115610a325782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109da565b5b509050610a409190610a44565b5090565b5b80821115610a5d576000816000905550600101610a45565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9182610a66565b9050919050565b610aa181610a86565b8114610aac57600080fd5b50565b600081359050610abe81610a98565b92915050565b600060208284031215610ada57610ad9610a61565b5b6000610ae884828501610aaf565b91505092915050565b6000819050919050565b610b0481610af1565b82525050565b6000602082019050610b1f6000830184610afb565b92915050565b610b2e81610a86565b82525050565b6000602082019050610b496000830184610b25565b92915050565b6000819050919050565b6000610b74610b6f610b6a84610a66565b610b4f565b610a66565b9050919050565b6000610b8682610b59565b9050919050565b6000610b9882610b7b565b9050919050565b610ba881610b8d565b82525050565b6000602082019050610bc36000830184610b9f565b92915050565b610bd281610af1565b8114610bdd57600080fd5b50565b600081359050610bef81610bc9565b92915050565b600060208284031215610c0b57610c0a610a61565b5b6000610c1984828501610be0565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610c69601283610c22565b9150610c7482610c33565b602082019050919050565b60006020820190508181036000830152610c9881610c5c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cd982610af1565b9150610ce483610af1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1957610d18610c9f565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d5e82610af1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9157610d90610c9f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610de6600083610dcb565b9150610df182610dd6565b600082019050919050565b6000610e0782610dd9565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e47600b83610c22565b9150610e5282610e11565b602082019050919050565b60006020820190508181036000830152610e7681610e3a565b9050919050565b6000610e8882610af1565b9150610e9383610af1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ecc57610ecb610c9f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1182610af1565b9150610f1c83610af1565b925082610f2c57610f2b610ed7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f5681610f37565b8114610f6157600080fd5b50565b600081519050610f7381610f4d565b92915050565b6000819050919050565b610f8c81610f79565b8114610f9757600080fd5b50565b600081519050610fa981610f83565b92915050565b600081519050610fbe81610bc9565b92915050565b600080600080600060a08688031215610fe057610fdf610a61565b5b6000610fee88828901610f64565b9550506020610fff88828901610f9a565b945050604061101088828901610faf565b935050606061102188828901610faf565b925050608061103288828901610f64565b9150509295509295909350565b600061104a82610f79565b915061105583610f79565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109457611093610c9f565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110d1576110d0610c9f565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561110e5761110d610c9f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561114b5761114a610c9f565b5b82820290509291505056fea264697066735822122045a4fd4a02b1ba3441aa5d9545408ae851701a0a4d7a7682859e502b48249f7264736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ac4565b6102e9565b6040516100cc9190610b0a565b60405180910390f35b6100dd610332565b005b3480156100eb57600080fd5b506100f4610573565b6040516101019190610b0a565b60405180910390f35b34801561011657600080fd5b5061011f610580565b60405161012c9190610b34565b60405180910390f35b34801561014157600080fd5b5061014a6105a8565b6040516101579190610bae565b60405180910390f35b6101686101b1565b005b6101726105d1565b005b34801561018057600080fd5b5061019b60048036038101906101969190610bf5565b610896565b6040516101a89190610b34565b60405180910390f35b6802b5e3af16b18800006101ee60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108de90919063ffffffff16565b1161022e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022590610c7f565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102e09190610cce565b92505081905550565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610463576000600182815481106103dd576103dc610d24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045b90610d53565b9150506103ba565b50600067ffffffffffffffff81111561047f5761047e610d9c565b5b6040519080825280602002602001820160405280156104ad5781602001602082028036833780820191505090505b50600190805190602001906104c39291906109ba565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ea90610dfc565b60006040518083038185875af1925050503d8060008114610527576040519150601f19603f3d011682016040523d82523d6000602084013e61052c565b606091505b5050905080610570576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056790610e5d565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610656576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106da57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610690575b5050505050905060005b815181101561076557600082828151811061070257610701610d24565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075d90610d53565b9150506106e4565b50600067ffffffffffffffff81111561078157610780610d9c565b5b6040519080825280602002602001820160405280156107af5781602001602082028036833780820191505090505b50600190805190602001906107c59291906109ba565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080c90610dfc565b60006040518083038185875af1925050503d8060008114610849576040519150601f19603f3d011682016040523d82523d6000602084013e61084e565b606091505b5050905080610892576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088990610e5d565b60405180910390fd5b5050565b6000600182815481106108ac576108ab610d24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108ea8361091a565b90506000670de0b6b3a764000085836109039190610e7d565b61090d9190610f06565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561096357600080fd5b505afa158015610977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099b9190610fc4565b5050509150506402540be400816109b2919061103f565b915050919050565b828054828255906000526020600020908101928215610a33579160200282015b82811115610a325782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109da565b5b509050610a409190610a44565b5090565b5b80821115610a5d576000816000905550600101610a45565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9182610a66565b9050919050565b610aa181610a86565b8114610aac57600080fd5b50565b600081359050610abe81610a98565b92915050565b600060208284031215610ada57610ad9610a61565b5b6000610ae884828501610aaf565b91505092915050565b6000819050919050565b610b0481610af1565b82525050565b6000602082019050610b1f6000830184610afb565b92915050565b610b2e81610a86565b82525050565b6000602082019050610b496000830184610b25565b92915050565b6000819050919050565b6000610b74610b6f610b6a84610a66565b610b4f565b610a66565b9050919050565b6000610b8682610b59565b9050919050565b6000610b9882610b7b565b9050919050565b610ba881610b8d565b82525050565b6000602082019050610bc36000830184610b9f565b92915050565b610bd281610af1565b8114610bdd57600080fd5b50565b600081359050610bef81610bc9565b92915050565b600060208284031215610c0b57610c0a610a61565b5b6000610c1984828501610be0565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610c69601283610c22565b9150610c7482610c33565b602082019050919050565b60006020820190508181036000830152610c9881610c5c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cd982610af1565b9150610ce483610af1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1957610d18610c9f565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d5e82610af1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d9157610d90610c9f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610de6600083610dcb565b9150610df182610dd6565b600082019050919050565b6000610e0782610dd9565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e47600b83610c22565b9150610e5282610e11565b602082019050919050565b60006020820190508181036000830152610e7681610e3a565b9050919050565b6000610e8882610af1565b9150610e9383610af1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ecc57610ecb610c9f565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1182610af1565b9150610f1c83610af1565b925082610f2c57610f2b610ed7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f5681610f37565b8114610f6157600080fd5b50565b600081519050610f7381610f4d565b92915050565b6000819050919050565b610f8c81610f79565b8114610f9757600080fd5b50565b600081519050610fa981610f83565b92915050565b600081519050610fbe81610bc9565b92915050565b600080600080600060a08688031215610fe057610fdf610a61565b5b6000610fee88828901610f64565b9550506020610fff88828901610f9a565b945050604061101088828901610faf565b935050606061102188828901610faf565b925050608061103288828901610f64565b9150509295509295909350565b600061104a82610f79565b915061105583610f79565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109457611093610c9f565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110d1576110d0610c9f565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561110e5761110d610c9f565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561114b5761114a610c9f565b5b82820290509291505056fea264697066735822122045a4fd4a02b1ba3441aa5d9545408ae851701a0a4d7a7682859e502b48249f7264736f6c63430008080033",
  "devdoc": {
    "author": "alvinobabino",
    "details": "This implements price feeds as our library This contract follows solidity style guide",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feed as our library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds the contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}